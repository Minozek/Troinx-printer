[include shell_command.cfg]
[include mainsail.cfg]

#[include generic-bigtreetech-octopus-v1.1.cfg] # [include generic-bigtreetech-xxx.cfg]

[exclude_object] #added by mino for adaptive bed mesh 26_11_2024

[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]
# host MCU service is preinstalled and ready to use with:
[mcu CB1]
serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: CB1:None
#spi_bus: spidev1.1
#axes_map: 175,175,20  # Modify according to the actual orientation of the ADXL345 installed on the printer.

# See docs/Config_Reference.md for a description of parameters.

# Driver4
#[extruder]
#step_pin: PF9
#dir_pin: PF10
#enable_pin: !PG2
#microsteps: 16
#rotation_distance: 33.500
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: PA2 # HE0
#sensor_pin:  PF4 # T0
#sensor_type: EPCOS 100K B57560G104F
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 250

[filament_switch_sensor material_0]
switch_pin: PG12

# Driver5
#[extruder1]
#step_pin: PC13
#dir_pin: PF0
#enable_pin: !PF1
#heater_pin: PA3 # HE1
#sensor_pin: PF5 # T1
#...

#[filament_switch_sensor material_1]
#switch_pin: PG13

# Driver6
#[extruder2]
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
#heater_pin: PB10 # HE2
#sensor_pin: PF6 # T2
#...

#[filament_switch_sensor material_2]
#switch_pin: PG14

# Driver7
#[extruder3]
#step_pin: PE6
#dir_pin: PA14
#enable_pin: !PE0
#heater_pin: PB11 # HE3
#sensor_pin: PF7 # T3
#...

#[filament_switch_sensor material_3]
#switch_pin: PG15

[heater_bed]
heater_pin: PA1
sensor_pin: PF3 # TB
sensor_type: ATC Semitec 104GT-2
control: watermark
min_temp: 0
max_temp: 130

[fan_generic mainboard_fan] # vyblokovan By mino prepisuje ovladani EBB36
pin: PA8

[fan_generic cooling_fan_left] # vyblokovan By mino prepisuje ovladani EBB36
pin: PE5

[fan_generic cooling_fan_right] # vyblokovan By mino prepisuje ovladani EBB36
pin: PD12


## PART COOLING

#[heater_fan fan3]
#pin: PD13

#[heater_fan fan4]
#pin: PD14

#[controller_fan fan5]
#pin: PD15

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_160010000350534E4E313120-if00      # usb-Klipper_Klipper_firmware_12345-if00
# CAN bus is also available on this board

[printer]
kinematics: corexy #cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

########################################
# TMC2209 configuration octopus
########################################

[tmc2209 stepper_x] #tady se odblokovali v≈°echny TMC 2209 drivery na x, y, z osy
uart_pin: PC4
#diag_pin: PG6
run_current: 1.0 #0.8
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD11
#diag_pin: PG9
run_current: 1.0 #0.8
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC6
#diag_pin: PG10
run_current: 0.65 #0.650
stealthchop_threshold: 999999

[tmc2209 stepper_z1]
uart_pin: PC7
#diag_pin: PG11
run_current: 0.65 #0.650
stealthchop_threshold: 999999

#[tmc2209 extruder]
#uart_pin: PF2
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder1]
#uart_pin: PE4
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder2]
#uart_pin: PE1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder3]
#uart_pin: PD3
#run_current: 0.800
#stealthchop_threshold: 999999

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

# A [probe] section can be defined instead with a pin: setting identical
# to the sensor_pin: for a bltouch
#[bltouch]
#sensor_pin: PB7
#control_pin: PB6
##z_offset: 0

#[neopixel my_neopixel]
#pin: PB0

[stepper_x]
position_min: 0 #-5
position_endstop: 0 #-5
position_max: 330
# Driver0
step_pin: PF13 
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
endstop_pin: ^can0:LIMIT_2 #PG6
homing_speed: 100 ;50

[stepper_y]
position_min: 0 #-5
position_endstop: 0 #-5
position_max: 330
# Driver1
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
endstop_pin: PG9
homing_speed: 100 ;50

# Driver2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 8
#endstop_pin: PG10
#position_endstop: 0.5
#position_max: 200 
endstop_pin: probe:z_virtual_endstop
position_min: -10 #0 added by mino
position_max: 400 #added by mino

# Driver3
# The Octopus only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 8
#endstop_pin: PG10
#position_endstop: 0.5
endstop_pin: probe:z_virtual_endstop #endstop_pin: PG11

[z_tilt] #z_tilt added by mino
z_positions: 300,150
            20,150
points: 300,150
      20,150
retries: 10
retry_tolerance: 0.025
horizontal_move_z: 10 #head height added by mino

[bed_mesh]
mesh_min: 0, 0
mesh_max: 330, 330 #199, 189
speed: 120 # added by mino_ only bed mesh_ 10_11_2024
horizontal_move_z: 3 #5
probe_count: 5, 3


[homing_override] #added by mino
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  # Homing of X
  {% if home_all or 'X' in params %}
    G28 X
    G90
    G0 X150
  {% endif %}
  # Homing of Y  
  {% if home_all or 'Y' in params %}
    G28 Y
    G90
    G0 Y150
  {% endif %}
  # Homing of Z  
  {% if home_all or 'Z' in params %}
    G28 Z
    G90
    G0 Z10
 {% endif %}

## PROBE - MOVE THIS TO printer.cfg or your probe offsets will fail! copied from gidhub Eric Zimmer EBB36 board
[probe]
pin: ^can0:LIMIT_1
x_offset: 0 #-29.8
y_offset: 0 #-13.5
#z_offset: 0 #2.202
speed: 5
samples: 3
sample_retract_dist: 2
lift_speed: 5.0
samples_result: median
samples_tolerance: 0.02
samples_tolerance_retries: 5

activate_gcode: #added by mino
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    

#EBB 36 
# UUID  b22b35531b00 na can0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.210000, -0.382500, -0.515000, -0.667500
#*# 	  -0.287500, -0.462500, -0.612500, -0.762500
#*# 	  -0.342500, -0.505000, -0.622500, -0.790000
#*# 	  -0.475000, -0.582500, -0.692500, -0.820000
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 204.651
#*# max_x = 317.06100000000004
#*# min_y = 45.2306
#*# max_y = 209.1806
#*#
#*# [probe]
#*# z_offset = -1.800
